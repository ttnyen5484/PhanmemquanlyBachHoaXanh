// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Test_GiamGia
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using DevExpress.CodedUIExtension.DXTestControls.v21_1;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// TestGiamGia - Use 'TestGiamGiaParams' to pass parameters into this method.
        /// </summary>
        public void TestGiamGia()
        {
            #region Variable Declarations
            WinTable uIDataGridViewTable = this.UIFrmMainfrmSanPhamWindow.UIFrmSanPhamWindow.UIDgvDSSPGiamGiaWindow.UIDataGridViewTable;
            DXComboBox uICboPercentComboBox = this.UIFrmMainfrmSanPhamWindow.UICboPercentComboBox;
            DXDateTimePicker uIDateDateTimeEdit = this.UIFrmMainfrmSanPhamWindow.UIDateDateTimeEdit;
            WinButton uICẬPNHẬTGIÁButton = this.UIFrmMainfrmSanPhamWindow.UIFrmSanPhamWindow.UICẬPNHẬTGIÁWindow.UICẬPNHẬTGIÁButton;
            #endregion

            // Click 'DataGridView' table
            Mouse.Click(uIDataGridViewTable, new Point(186, 91));

            // Select '20' in 'cboPercent' combo box
            //ValueAsString
            uICboPercentComboBox.ValueAsString = this.TestGiamGiaParams.UICboPercentComboBoxValueAsString;

            // Type '2021-06-06 [SelectionStart]0[SelectionLength]8' in 'date' DateTimeEdit
            //ValueAsString
            uIDateDateTimeEdit.ValueAsString = this.TestGiamGiaParams.UIDateDateTimeEditValueAsString;

            // Click 'CẬP NHẬT GIÁ' button
            Mouse.Click(uICẬPNHẬTGIÁButton, new Point(307, 34));
        }
        
        /// <summary>
        /// Assert_DuLieuNull - Use 'Assert_DuLieuNullExpectedValues' to pass parameters into this method.
        /// </summary>
        public void Assert_DuLieuNull()
        {
            #region Variable Declarations
            WinText uIVuilòngnhậpdữliệuđầyText = this.UIVuilòngnhậpdữliệuđầyWindow.UIVuilòngnhậpdữliệuđầyText;
            #endregion

            // Verify that the 'Name' property of 'Vui lòng nhập dữ liệu đầy đủ' label equals 'Vui lòng nhập dữ liệu đầy đủ'
            Assert.AreEqual(this.Assert_DuLieuNullExpectedValues.UIVuilòngnhậpdữliệuđầyTextName, uIVuilòngnhậpdữliệuđầyText.Name);
        }
        
        /// <summary>
        /// Assert_MucGiamNull - Use 'Assert_MucGiamNullExpectedValues' to pass parameters into this method.
        /// </summary>
        public void Assert_MucGiamNull()
        {
            #region Variable Declarations
            WinText uIVuilòngchọnmứcphầntrText = this.UIVuilòngchọnmứcphầntrWindow.UIVuilòngchọnmứcphầntrText;
            #endregion

            // Verify that the 'Name' property of 'Vui lòng chọn mức phần trăm giảm' label equals 'Vui lòng chọn mức phần trăm giảm'
            Assert.AreEqual(this.Assert_MucGiamNullExpectedValues.UIVuilòngchọnmứcphầntrTextName, uIVuilòngchọnmứcphầntrText.Name);
        }
        
        /// <summary>
        /// Assert_NgayADNull - Use 'Assert_NgayADNullExpectedValues' to pass parameters into this method.
        /// </summary>
        public void Assert_NgayADNull()
        {
            #region Variable Declarations
            WinText uIVuilòngchọnngàyápdụnText = this.UIVuilòngchọnngàyápdụnWindow.UIVuilòngchọnngàyápdụnText;
            #endregion

            // Verify that the 'Name' property of 'Vui lòng chọn ngày áp dụng' label equals 'Vui lòng chọn ngày áp dụng'
            Assert.AreEqual(this.Assert_NgayADNullExpectedValues.UIVuilòngchọnngàyápdụnTextName, uIVuilòngchọnngàyápdụnText.Name);
        }
        
        /// <summary>
        /// Assert_MucGiamNhoHon0 - Use 'Assert_MucGiamNhoHon0ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void Assert_MucGiamNhoHon0()
        {
            #region Variable Declarations
            WinText uIPhầntrămgiảmphảilớnhText = this.UIPhầntrămgiảmphảilớnhWindow.UIPhầntrămgiảmphảilớnhText;
            #endregion

            // Verify that the 'Name' property of 'Phần trăm giảm phải lớn hơn 0!' label equals 'Phần trăm giảm phải lớn hơn 0!'
            Assert.AreEqual(this.Assert_MucGiamNhoHon0ExpectedValues.UIPhầntrămgiảmphảilớnhTextName, uIPhầntrămgiảmphảilớnhText.Name);
        }
        
        /// <summary>
        /// Assert_DuLieuFull - Use 'Assert_DuLieuFullExpectedValues' to pass parameters into this method.
        /// </summary>
        public void Assert_DuLieuFull()
        {
            #region Variable Declarations
            WinText uIThêmthànhcôngText = this.UIThêmthànhcôngWindow.UIThêmthànhcôngText;
            #endregion

            // Verify that the 'Name' property of 'Thêm thành công!' label equals 'Thêm thành công!'
            Assert.AreEqual(this.Assert_DuLieuFullExpectedValues.UIThêmthànhcôngTextName, uIThêmthànhcôngText.Name);
        }
        
        /// <summary>
        /// TestGiamGia1 - Use 'TestGiamGia1Params' to pass parameters into this method.
        /// </summary>
        public void TestGiamGia1()
        {
            #region Variable Declarations
            WinTable uIDataGridViewTable = this.UIFrmMainfrmSanPhamWindow.UIFrmSanPhamWindow.UIDgvDSSPGiamGiaWindow.UIDataGridViewTable;
            DXComboBox uICboPercentComboBox = this.UIFrmMainfrmSanPhamWindow.UICboPercentComboBox;
            DXDateTimePicker uIDateDateTimeEdit = this.UIFrmMainfrmSanPhamWindow.UIDateDateTimeEdit;
            WinButton uICẬPNHẬTGIÁButton = this.UIFrmMainfrmSanPhamWindow.UIFrmSanPhamWindow.UICẬPNHẬTGIÁWindow.UICẬPNHẬTGIÁButton;
            #endregion

            // Click 'DataGridView' table
            Mouse.Click(uIDataGridViewTable, new Point(202, 96));

            // Select '20' in 'cboPercent' combo box
            //ValueAsString
            uICboPercentComboBox.ValueAsString = this.TestGiamGia1Params.UICboPercentComboBoxValueAsString;

            // Type '2021-06-09 [SelectionStart]0[SelectionLength]8' in 'date' DateTimeEdit
            //ValueAsString
            uIDateDateTimeEdit.ValueAsString = this.TestGiamGia1Params.UIDateDateTimeEditValueAsString;

            // Click 'CẬP NHẬT GIÁ' button
            Mouse.Click(uICẬPNHẬTGIÁButton, new Point(296, 26));
        }
        
        #region Properties
        public virtual TestGiamGiaParams TestGiamGiaParams
        {
            get
            {
                if ((this.mTestGiamGiaParams == null))
                {
                    this.mTestGiamGiaParams = new TestGiamGiaParams();
                }
                return this.mTestGiamGiaParams;
            }
        }
        
        public virtual Assert_DuLieuNullExpectedValues Assert_DuLieuNullExpectedValues
        {
            get
            {
                if ((this.mAssert_DuLieuNullExpectedValues == null))
                {
                    this.mAssert_DuLieuNullExpectedValues = new Assert_DuLieuNullExpectedValues();
                }
                return this.mAssert_DuLieuNullExpectedValues;
            }
        }
        
        public virtual Assert_MucGiamNullExpectedValues Assert_MucGiamNullExpectedValues
        {
            get
            {
                if ((this.mAssert_MucGiamNullExpectedValues == null))
                {
                    this.mAssert_MucGiamNullExpectedValues = new Assert_MucGiamNullExpectedValues();
                }
                return this.mAssert_MucGiamNullExpectedValues;
            }
        }
        
        public virtual Assert_NgayADNullExpectedValues Assert_NgayADNullExpectedValues
        {
            get
            {
                if ((this.mAssert_NgayADNullExpectedValues == null))
                {
                    this.mAssert_NgayADNullExpectedValues = new Assert_NgayADNullExpectedValues();
                }
                return this.mAssert_NgayADNullExpectedValues;
            }
        }
        
        public virtual Assert_MucGiamNhoHon0ExpectedValues Assert_MucGiamNhoHon0ExpectedValues
        {
            get
            {
                if ((this.mAssert_MucGiamNhoHon0ExpectedValues == null))
                {
                    this.mAssert_MucGiamNhoHon0ExpectedValues = new Assert_MucGiamNhoHon0ExpectedValues();
                }
                return this.mAssert_MucGiamNhoHon0ExpectedValues;
            }
        }
        
        public virtual Assert_DuLieuFullExpectedValues Assert_DuLieuFullExpectedValues
        {
            get
            {
                if ((this.mAssert_DuLieuFullExpectedValues == null))
                {
                    this.mAssert_DuLieuFullExpectedValues = new Assert_DuLieuFullExpectedValues();
                }
                return this.mAssert_DuLieuFullExpectedValues;
            }
        }
        
        public virtual TestGiamGia1Params TestGiamGia1Params
        {
            get
            {
                if ((this.mTestGiamGia1Params == null))
                {
                    this.mTestGiamGia1Params = new TestGiamGia1Params();
                }
                return this.mTestGiamGia1Params;
            }
        }
        
        public UIFrmMainfrmSanPhamWindow UIFrmMainfrmSanPhamWindow
        {
            get
            {
                if ((this.mUIFrmMainfrmSanPhamWindow == null))
                {
                    this.mUIFrmMainfrmSanPhamWindow = new UIFrmMainfrmSanPhamWindow();
                }
                return this.mUIFrmMainfrmSanPhamWindow;
            }
        }
        
        public UIVuilòngnhậpdữliệuđầyWindow UIVuilòngnhậpdữliệuđầyWindow
        {
            get
            {
                if ((this.mUIVuilòngnhậpdữliệuđầyWindow == null))
                {
                    this.mUIVuilòngnhậpdữliệuđầyWindow = new UIVuilòngnhậpdữliệuđầyWindow();
                }
                return this.mUIVuilòngnhậpdữliệuđầyWindow;
            }
        }
        
        public UIVuilòngchọnmứcphầntrWindow UIVuilòngchọnmứcphầntrWindow
        {
            get
            {
                if ((this.mUIVuilòngchọnmứcphầntrWindow == null))
                {
                    this.mUIVuilòngchọnmứcphầntrWindow = new UIVuilòngchọnmứcphầntrWindow();
                }
                return this.mUIVuilòngchọnmứcphầntrWindow;
            }
        }
        
        public UIVuilòngchọnngàyápdụnWindow UIVuilòngchọnngàyápdụnWindow
        {
            get
            {
                if ((this.mUIVuilòngchọnngàyápdụnWindow == null))
                {
                    this.mUIVuilòngchọnngàyápdụnWindow = new UIVuilòngchọnngàyápdụnWindow();
                }
                return this.mUIVuilòngchọnngàyápdụnWindow;
            }
        }
        
        public UIPhầntrămgiảmphảilớnhWindow UIPhầntrămgiảmphảilớnhWindow
        {
            get
            {
                if ((this.mUIPhầntrămgiảmphảilớnhWindow == null))
                {
                    this.mUIPhầntrămgiảmphảilớnhWindow = new UIPhầntrămgiảmphảilớnhWindow();
                }
                return this.mUIPhầntrămgiảmphảilớnhWindow;
            }
        }
        
        public UIThêmthànhcôngWindow UIThêmthànhcôngWindow
        {
            get
            {
                if ((this.mUIThêmthànhcôngWindow == null))
                {
                    this.mUIThêmthànhcôngWindow = new UIThêmthànhcôngWindow();
                }
                return this.mUIThêmthànhcôngWindow;
            }
        }
        #endregion
        
        #region Fields
        private TestGiamGiaParams mTestGiamGiaParams;
        
        private Assert_DuLieuNullExpectedValues mAssert_DuLieuNullExpectedValues;
        
        private Assert_MucGiamNullExpectedValues mAssert_MucGiamNullExpectedValues;
        
        private Assert_NgayADNullExpectedValues mAssert_NgayADNullExpectedValues;
        
        private Assert_MucGiamNhoHon0ExpectedValues mAssert_MucGiamNhoHon0ExpectedValues;
        
        private Assert_DuLieuFullExpectedValues mAssert_DuLieuFullExpectedValues;
        
        private TestGiamGia1Params mTestGiamGia1Params;
        
        private UIFrmMainfrmSanPhamWindow mUIFrmMainfrmSanPhamWindow;
        
        private UIVuilòngnhậpdữliệuđầyWindow mUIVuilòngnhậpdữliệuđầyWindow;
        
        private UIVuilòngchọnmứcphầntrWindow mUIVuilòngchọnmứcphầntrWindow;
        
        private UIVuilòngchọnngàyápdụnWindow mUIVuilòngchọnngàyápdụnWindow;
        
        private UIPhầntrămgiảmphảilớnhWindow mUIPhầntrămgiảmphảilớnhWindow;
        
        private UIThêmthànhcôngWindow mUIThêmthànhcôngWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestGiamGia'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class TestGiamGiaParams
    {
        
        #region Fields
        /// <summary>
        /// Select '20' in 'cboPercent' combo box
        /// </summary>
        public string UICboPercentComboBoxValueAsString = "20";
        
        /// <summary>
        /// Type '2021-06-06 [SelectionStart]0[SelectionLength]8' in 'date' DateTimeEdit
        /// </summary>
        public string UIDateDateTimeEditValueAsString = "2021-06-06 [SelectionStart]0[SelectionLength]8";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Assert_DuLieuNull'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class Assert_DuLieuNullExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Vui lòng nhập dữ liệu đầy đủ' label equals 'Vui lòng nhập dữ liệu đầy đủ'
        /// </summary>
        public string UIVuilòngnhậpdữliệuđầyTextName = "Vui lòng nhập dữ liệu đầy đủ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Assert_MucGiamNull'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class Assert_MucGiamNullExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Vui lòng chọn mức phần trăm giảm' label equals 'Vui lòng chọn mức phần trăm giảm'
        /// </summary>
        public string UIVuilòngchọnmứcphầntrTextName = "Vui lòng chọn mức phần trăm giảm";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Assert_NgayADNull'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class Assert_NgayADNullExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Vui lòng chọn ngày áp dụng' label equals 'Vui lòng chọn ngày áp dụng'
        /// </summary>
        public string UIVuilòngchọnngàyápdụnTextName = "Vui lòng chọn ngày áp dụng";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Assert_MucGiamNhoHon0'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class Assert_MucGiamNhoHon0ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Phần trăm giảm phải lớn hơn 0!' label equals 'Phần trăm giảm phải lớn hơn 0!'
        /// </summary>
        public string UIPhầntrămgiảmphảilớnhTextName = "Phần trăm giảm phải lớn hơn 0!";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Assert_DuLieuFull'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class Assert_DuLieuFullExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Thêm thành công!' label equals 'Thêm thành công!'
        /// </summary>
        public string UIThêmthànhcôngTextName = "Thêm thành công!";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestGiamGia1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class TestGiamGia1Params
    {
        
        #region Fields
        /// <summary>
        /// Select '20' in 'cboPercent' combo box
        /// </summary>
        public string UICboPercentComboBoxValueAsString = "20";
        
        /// <summary>
        /// Type '2021-06-09 [SelectionStart]0[SelectionLength]8' in 'date' DateTimeEdit
        /// </summary>
        public string UIDateDateTimeEditValueAsString = "2021-06-09 [SelectionStart]0[SelectionLength]8";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFrmMainfrmSanPhamWindow : WinWindow
    {
        
        public UIFrmMainfrmSanPhamWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "frmMain - [frmSanPham]";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("frmMain - [frmSanPham]");
            #endregion
        }
        
        #region Properties
        public UIFrmSanPhamWindow UIFrmSanPhamWindow
        {
            get
            {
                if ((this.mUIFrmSanPhamWindow == null))
                {
                    this.mUIFrmSanPhamWindow = new UIFrmSanPhamWindow(this);
                }
                return this.mUIFrmSanPhamWindow;
            }
        }
        
        public DXComboBox UICboPercentComboBox
        {
            get
            {
                if ((this.mUICboPercentComboBox == null))
                {
                    this.mUICboPercentComboBox = new DXComboBox(this);
                    #region Search Criteria
                    this.mUICboPercentComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cboPercent";
                    this.mUICboPercentComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
                    this.mUICboPercentComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
                    this.mUICboPercentComboBox.WindowTitles.Add("frmMain - [frmSanPham]");
                    #endregion
                }
                return this.mUICboPercentComboBox;
            }
        }
        
        public DXDateTimePicker UIDateDateTimeEdit
        {
            get
            {
                if ((this.mUIDateDateTimeEdit == null))
                {
                    this.mUIDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "date";
                    this.mUIDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DateEdit";
                    this.mUIDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
                    #endregion
                }
                return this.mUIDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private UIFrmSanPhamWindow mUIFrmSanPhamWindow;
        
        private DXComboBox mUICboPercentComboBox;
        
        private DXDateTimePicker mUIDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFrmSanPhamWindow : WinWindow
    {
        
        public UIFrmSanPhamWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "frmQLGia";
            this.WindowTitles.Add("frmMain - [frmSanPham]");
            #endregion
        }
        
        #region Properties
        public UIDgvDSSPGiamGiaWindow UIDgvDSSPGiamGiaWindow
        {
            get
            {
                if ((this.mUIDgvDSSPGiamGiaWindow == null))
                {
                    this.mUIDgvDSSPGiamGiaWindow = new UIDgvDSSPGiamGiaWindow(this);
                }
                return this.mUIDgvDSSPGiamGiaWindow;
            }
        }
        
        public UIFrmSanPhamClient UIFrmSanPhamClient
        {
            get
            {
                if ((this.mUIFrmSanPhamClient == null))
                {
                    this.mUIFrmSanPhamClient = new UIFrmSanPhamClient(this);
                }
                return this.mUIFrmSanPhamClient;
            }
        }
        
        public UICẬPNHẬTGIÁWindow UICẬPNHẬTGIÁWindow
        {
            get
            {
                if ((this.mUICẬPNHẬTGIÁWindow == null))
                {
                    this.mUICẬPNHẬTGIÁWindow = new UICẬPNHẬTGIÁWindow(this);
                }
                return this.mUICẬPNHẬTGIÁWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIDgvDSSPGiamGiaWindow mUIDgvDSSPGiamGiaWindow;
        
        private UIFrmSanPhamClient mUIFrmSanPhamClient;
        
        private UICẬPNHẬTGIÁWindow mUICẬPNHẬTGIÁWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDgvDSSPGiamGiaWindow : WinWindow
    {
        
        public UIDgvDSSPGiamGiaWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dgvDSSPGiamGia";
            this.WindowTitles.Add("frmMain - [frmSanPham]");
            #endregion
        }
        
        #region Properties
        public UIDataGridViewTable UIDataGridViewTable
        {
            get
            {
                if ((this.mUIDataGridViewTable == null))
                {
                    this.mUIDataGridViewTable = new UIDataGridViewTable(this);
                }
                return this.mUIDataGridViewTable;
            }
        }
        #endregion
        
        #region Fields
        private UIDataGridViewTable mUIDataGridViewTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDataGridViewTable : WinTable
    {
        
        public UIDataGridViewTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTable.PropertyNames.Name] = "DataGridView";
            this.WindowTitles.Add("frmMain - [frmSanPham]");
            #endregion
        }
        
        #region Properties
        public UIRow1Row UIRow1Row
        {
            get
            {
                if ((this.mUIRow1Row == null))
                {
                    this.mUIRow1Row = new UIRow1Row(this);
                }
                return this.mUIRow1Row;
            }
        }
        #endregion
        
        #region Fields
        private UIRow1Row mUIRow1Row;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRow1Row : WinRow
    {
        
        public UIRow1Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinRow.PropertyNames.Value] = "PN01      ;SP003     ;10;12000;120000;(null);4/16/2021;6/15/2021";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("frmMain - [frmSanPham]");
            #endregion
        }
        
        #region Properties
        public WinCell UIItem4162021Cell
        {
            get
            {
                if ((this.mUIItem4162021Cell == null))
                {
                    this.mUIItem4162021Cell = new WinCell(this);
                    #region Search Criteria
                    this.mUIItem4162021Cell.SearchProperties[WinCell.PropertyNames.Value] = "4/16/2021";
                    this.mUIItem4162021Cell.WindowTitles.Add("frmMain - [frmSanPham]");
                    #endregion
                }
                return this.mUIItem4162021Cell;
            }
        }
        
        public WinCell UIItem10Cell
        {
            get
            {
                if ((this.mUIItem10Cell == null))
                {
                    this.mUIItem10Cell = new WinCell(this);
                    #region Search Criteria
                    this.mUIItem10Cell.SearchProperties[WinCell.PropertyNames.Value] = "10";
                    this.mUIItem10Cell.WindowTitles.Add("frmMain - [frmSanPham]");
                    #endregion
                }
                return this.mUIItem10Cell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIItem4162021Cell;
        
        private WinCell mUIItem10Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFrmSanPhamClient : WinClient
    {
        
        public UIFrmSanPhamClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "frmSanPham";
            this.WindowTitles.Add("frmMain - [frmSanPham]");
            #endregion
        }
        
        #region Properties
        public WinWindow UICẬPNHẬTGIÁWindow
        {
            get
            {
                if ((this.mUICẬPNHẬTGIÁWindow == null))
                {
                    this.mUICẬPNHẬTGIÁWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUICẬPNHẬTGIÁWindow.SearchProperties[WinWindow.PropertyNames.Name] = "CẬP NHẬT GIÁ";
                    this.mUICẬPNHẬTGIÁWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.BUTTON", PropertyExpressionOperator.Contains));
                    this.mUICẬPNHẬTGIÁWindow.WindowTitles.Add("frmMain - [frmSanPham]");
                    #endregion
                }
                return this.mUICẬPNHẬTGIÁWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUICẬPNHẬTGIÁWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICẬPNHẬTGIÁWindow : WinWindow
    {
        
        public UICẬPNHẬTGIÁWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnCapNhatGia";
            this.WindowTitles.Add("frmMain - [frmSanPham]");
            #endregion
        }
        
        #region Properties
        public WinButton UICẬPNHẬTGIÁButton
        {
            get
            {
                if ((this.mUICẬPNHẬTGIÁButton == null))
                {
                    this.mUICẬPNHẬTGIÁButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICẬPNHẬTGIÁButton.SearchProperties[WinButton.PropertyNames.Name] = "CẬP NHẬT GIÁ";
                    this.mUICẬPNHẬTGIÁButton.WindowTitles.Add("frmMain - [frmSanPham]");
                    #endregion
                }
                return this.mUICẬPNHẬTGIÁButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICẬPNHẬTGIÁButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVuilòngnhậpdữliệuđầyWindow : WinWindow
    {
        
        public UIVuilòngnhậpdữliệuđầyWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Vui lòng nhập dữ liệu đầy đủ";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Static";
            this.WindowTitles.Add("Vui lòng nhập dữ liệu đầy đủ");
            #endregion
        }
        
        #region Properties
        public WinText UIVuilòngnhậpdữliệuđầyText
        {
            get
            {
                if ((this.mUIVuilòngnhậpdữliệuđầyText == null))
                {
                    this.mUIVuilòngnhậpdữliệuđầyText = new WinText(this);
                    #region Search Criteria
                    this.mUIVuilòngnhậpdữliệuđầyText.SearchProperties[WinText.PropertyNames.Name] = "Vui lòng nhập dữ liệu đầy đủ";
                    this.mUIVuilòngnhậpdữliệuđầyText.WindowTitles.Add("Vui lòng nhập dữ liệu đầy đủ");
                    #endregion
                }
                return this.mUIVuilòngnhậpdữliệuđầyText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIVuilòngnhậpdữliệuđầyText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVuilòngchọnmứcphầntrWindow : WinWindow
    {
        
        public UIVuilòngchọnmứcphầntrWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Vui lòng chọn mức phần trăm giảm";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Static";
            this.WindowTitles.Add("Vui lòng chọn mức phần trăm giảm");
            #endregion
        }
        
        #region Properties
        public WinText UIVuilòngchọnmứcphầntrText
        {
            get
            {
                if ((this.mUIVuilòngchọnmứcphầntrText == null))
                {
                    this.mUIVuilòngchọnmứcphầntrText = new WinText(this);
                    #region Search Criteria
                    this.mUIVuilòngchọnmứcphầntrText.SearchProperties[WinText.PropertyNames.Name] = "Vui lòng chọn mức phần trăm giảm";
                    this.mUIVuilòngchọnmứcphầntrText.WindowTitles.Add("Vui lòng chọn mức phần trăm giảm");
                    #endregion
                }
                return this.mUIVuilòngchọnmứcphầntrText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIVuilòngchọnmứcphầntrText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVuilòngchọnngàyápdụnWindow : WinWindow
    {
        
        public UIVuilòngchọnngàyápdụnWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Vui lòng chọn ngày áp dụng";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Static";
            this.WindowTitles.Add("Vui lòng chọn ngày áp dụng");
            #endregion
        }
        
        #region Properties
        public WinText UIVuilòngchọnngàyápdụnText
        {
            get
            {
                if ((this.mUIVuilòngchọnngàyápdụnText == null))
                {
                    this.mUIVuilòngchọnngàyápdụnText = new WinText(this);
                    #region Search Criteria
                    this.mUIVuilòngchọnngàyápdụnText.SearchProperties[WinText.PropertyNames.Name] = "Vui lòng chọn ngày áp dụng";
                    this.mUIVuilòngchọnngàyápdụnText.WindowTitles.Add("Vui lòng chọn ngày áp dụng");
                    #endregion
                }
                return this.mUIVuilòngchọnngàyápdụnText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIVuilòngchọnngàyápdụnText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPhầntrămgiảmphảilớnhWindow : WinWindow
    {
        
        public UIPhầntrămgiảmphảilớnhWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Phần trăm giảm phải lớn hơn 0!";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Static";
            this.WindowTitles.Add("Phần trăm giảm phải lớn hơn 0!");
            #endregion
        }
        
        #region Properties
        public WinText UIPhầntrămgiảmphảilớnhText
        {
            get
            {
                if ((this.mUIPhầntrămgiảmphảilớnhText == null))
                {
                    this.mUIPhầntrămgiảmphảilớnhText = new WinText(this);
                    #region Search Criteria
                    this.mUIPhầntrămgiảmphảilớnhText.SearchProperties[WinText.PropertyNames.Name] = "Phần trăm giảm phải lớn hơn 0!";
                    this.mUIPhầntrămgiảmphảilớnhText.WindowTitles.Add("Phần trăm giảm phải lớn hơn 0!");
                    #endregion
                }
                return this.mUIPhầntrămgiảmphảilớnhText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIPhầntrămgiảmphảilớnhText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIThêmthànhcôngWindow : WinWindow
    {
        
        public UIThêmthànhcôngWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Thêm thành công!";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Static";
            this.WindowTitles.Add("Thêm thành công!");
            #endregion
        }
        
        #region Properties
        public WinText UIThêmthànhcôngText
        {
            get
            {
                if ((this.mUIThêmthànhcôngText == null))
                {
                    this.mUIThêmthànhcôngText = new WinText(this);
                    #region Search Criteria
                    this.mUIThêmthànhcôngText.SearchProperties[WinText.PropertyNames.Name] = "Thêm thành công!";
                    this.mUIThêmthànhcôngText.WindowTitles.Add("Thêm thành công!");
                    #endregion
                }
                return this.mUIThêmthànhcôngText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIThêmthànhcôngText;
        #endregion
    }
}
